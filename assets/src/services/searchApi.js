const searchCache = new Map()

/**
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç AJAX-–∑–∞–ø—Ä–æ—Å –∫ –∫–∞—Å—Ç–æ–º–Ω–æ–º—É –ø–æ–∏—Å–∫—É –ø–æ REST API.
 * @param {string} query - –°—Ç—Ä–æ–∫–∞ –ø–æ–∏—Å–∫–∞.
 * @param {number} page - –ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1).
 * @returns {Promise<object>} - –û–±—ä–µ–∫—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞.
 */
export async function fetchSearchResults(query, page = 1) {
    if (!query.trim() || query.length <= 3) {
        return { success: false, data: [], total_count: 0 }
    }

    const cacheKey = `${query}-${page}`

    if (searchCache.has(cacheKey)) {
        console.log('‚ö° –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –∫—ç—à–∞:', cacheKey)
        return searchCache.get(cacheKey)
    }

    try {
        console.log('üåê –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä:', cacheKey)

        const response = await fetch(
            `/social-defender/wp-json/cas-search/v1/query/?search=${encodeURIComponent(query)}&page=${page}`,
        )
        const data = await response.json()

        if (!data.success) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', data)
            return { success: false, data: [], total_count: 0 }
        }

        searchCache.set(cacheKey, data)
        return data
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:', error)
        return { success: false, data: [], total_count: 0 }
    }
}
